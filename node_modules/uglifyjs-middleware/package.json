{
  "name": "uglifyjs-middleware",
  "version": "1.0.1",
  "description": "The no-thought-necessary JavaScript minification middleware for connect and express.",
  "keywords": [
    "minify",
    "uglifyjs",
    "uglifyjs2",
    "middleware",
    "connect",
    "express"
  ],
  "bugs": {
    "url": "http://github.com/bfrohs/UglifyJS-middleware/issues"
  },
  "licenses": [
    {
      "type": "The MIT License (MIT)",
      "url": "http://github.com/bfrohs/Proclass/blob/master/LICENSE"
    }
  ],
  "author": {
    "name": "Brandon Frohs",
    "email": "bfrohs@gmail.com",
    "url": "https://twitter.com/bfrohs"
  },
  "main": "./lib/middleware.js",
  "directories": {
    "lib": "./lib"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/bfrohs/UglifyJS-middleware.git"
  },
  "scripts": {
    "test": "mocha test/*"
  },
  "dependencies": {
    "uglify-js": "git://github.com/bfrohs/UglifyJS2.git#nodeFixes"
  },
  "devDependencies": {
    "mocha": "*",
    "supertest": "*",
    "temp": "*",
    "connect": "*",
    "express": "*"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "readme": "[![Build Status](https://travis-ci.org/bfrohs/UglifyJS-middleware.png?branch=master)](https://travis-ci.org/bfrohs/UglifyJS-middleware) [![NPM version](https://badge.fury.io/js/uglifyjs-middleware.png)](http://badge.fury.io/js/uglifyjs-middleware)\n\nThe no-thought-necessary JavaScript minification middleware for connect and express.\n\n# Usage\n\nInclude UglifyJS-middleware in your application ([available on npm](https://npmjs.org/package/uglifyjs-middleware)), add some JavaScript to a `*.js` file, and include `*.min.js` in your HTML.\n\nIf the `generateSourceMap` option is set to `true`, a [source map](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/) will be generated at `*.map.js` and linked to from `*.js`. *To use the source map in Chrome, make sure you have source maps enabled (dev tool settings > Sources > Enable source maps).*\n\n## Connect\n\n\tvar connect = require(\"connect\")\n\t  , uglifyMiddleware = require(\"uglifyjs-middleware\")\n\t  ;\n\n\tvar app = connect()\n\t\t.use(uglifyMiddleware(__dirname + \"/public\", {\n\t\t\tgenerateSourceMap: true\n\t\t}))\n\t\t.use(connect.static(__dirname + \"/public\"))\n\t\t.use(function(req, res) {\n\t\t\tres.statusCode = 404;\n\t\t\tres.end(\"Not found\");\n\t\t})\n\t\t.use(function(err, req, res, next) {\n\t\t\tconsole.error(err);\n\t\t\tres.statusCode = 500;\n\t\t\tres.end(\"Internal server error\");\n\t\t});\n\n## Express\n\n\tvar express = require(\"express\")\n\t  , uglifyMiddleware = require(\"uglifyjs-middleware\")\n\t  ;\n\n\tvar app = express.createServer();\n\n\tapp.configure(function () {\n\t\tapp.use(uglifyMiddleware(__dirname + \"/public\", {\n\t\t\tgenerateSourceMap: true\n\t\t}));\n\t\tapp.use(express.static(__dirname + \"/public\"));\n\t\tapp.use(function(req, res) {\n\t\t\tres.statusCode = 404;\n\t\t\tres.end(\"Not found\");\n\t\t});\n\t\tapp.use(function(err, req, res, next) {\n\t\t\tconsole.error(err);\n\t\t\tres.statusCode = 500;\n\t\t\tres.end(\"Internal server error\");\n\t\t});\n\t});\n\n**Note:** The \"mounting\" feature of `app.use()` works the same way as it does\nwith `express.static()`:\n\n\tapp.use(\"/mount\", uglifyMiddleware(__dirname + \"/public\", {\n\t\tgenerateSourceMap: true\n\t}));\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/bfrohs/UglifyJS-middleware",
  "_id": "uglifyjs-middleware@1.0.1",
  "_from": "uglifyjs-middleware@~1.0.1"
}
